
enum EVENT_ACTION_STATUS {
    EVENT_HANDLED = 0,
    EVENT_NOT_HANDLED,
    EVENT_ERROR
};
enum EVENT_ACTION {
//    KEY_PRESSED = 0,
    NO_ACTION = 0,
    SHOW_MAIN_VIEW,
    SHOW_ADD_VIEW,
    CLOSE_ADD_VIEW,
    ADD_VIEW_SHOW_SLIDER,
    ADD_VIEW_HIDE_SLIDER,
    ADD_VIEW_SLIDER_CHANGE,
    ADD_MESSAGE,//7
    SHOW_EDIT_VIEW,
    CLOSE_EDIT_VIEW,
    ACCEPT_EDIT,//10
    SHOW_CYCLIC_TEXTBOX,
    HIDE_CYCLIC_TEXTBOX,
    DELETE_TX_ITEM,

    //RX View
    CLEAR_RX_VIEW,
    TAKE_RX_SCREENSHOT,

    //TX View
    TX_ITEM_SELECTED,
    SEND_ONE_MESSAGE,
    TAKE_TX_SCREENSHOT,

    //Settings View
    CAN_PRESCALER_SLIDER_CHANGE,
    ACTIVATE_CAN_SLEEP_MODE,
    DEACTIVATE_CAN_SLEEP_MODE,
    INCREASE_CAN_PRESCALER_BY_ONE,
    DECREASE_CAN_PRESCALER_BY_ONE,
    ACCEPT_SETTINGS_CHANGE,
    CANCEL_SETTINGS_CHANGE,
    RESET_TO_DEFAULT_SETTINGS,
    REINIT_CAN,

    //SD Settings View
    SHOW_FORMAT_BUTTON,
    HIDE_FORMAT_BUTTON,
    FORMAT_SD,

    // CAN Status View
    RESET_CAN_ERRORS

};

class CEventListener {
public:
    virtual EVENT_ACTION evalEvent(GEvent *, EVENT_ACTION currentAction) {};

    virtual EVENT_ACTION_STATUS performAction(EVENT_ACTION action, GEvent *) {};
};